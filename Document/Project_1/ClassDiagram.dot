digraph "DataSturctures_Project1_2015104027"
{
  graph [label="DataSturctures_Project1_2015104027" fontname="Helvetica"]
  node [fontname="Helvetica",fontsize="10",shape=record];
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
 // LATEX_PDF_SIZE

 subgraph Exception{
 Node1 [label="std::exception",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="using Path processor find TargetFolder @detail trace the folder path"];
 Node2 [shape=record label="{Error in Structures|EmptyStack|EmptyQueue|FullQueue|FullStack}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip="Program driver."];
 Node3 [shape=record label="{Error in System|InvalidOperation|EmptyFolder|ItemNotFound|NameError|NoHistory|NoParent}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip="Program driver."];
 }

 subgraph Application{
   BaseApplication [label="BaseApplication"]
   TextApplication [label="TextApplication"]
   JPGApplication [label="JPGApplication"]
 }

 subgraph Item{
  ItemType [label="ItemType"]
  FolderType [label="FolderType"]
  FileType [label="FileType"]
 }

 subgraph Structures{
  Comparer [label="Comparer"]
  NodeType [label="NodeType"]
  DoublyNodeType [label="DoublyNodeType"]
  LinkedHistoryStack [label="LinkedHistoryStack"]
  LinkedQueue [label="LinkedQueue"]
  SortedLinkedList [label="SortedLinkedList"]
 }

 //Connection

 {rank=min;Node1}
  {rank=same;Node2;Node3;}
 Node1->{Node2, Node3}
 Node2->{LinkedHistoryStack,LinkedQueue}
 {rank=same;BaseApplication;}
   {rank=same;LinkedHistoryStack;LinkedQueue;}
  {rank=same;DoublyNodeType;NodeType;}
 Node3->BaseApplication
 ItemType->{FolderType,FileType}
 DoublyNodeType->LinkedHistoryStack->BaseApplication
 NodeType->LinkedQueue->BaseApplication



  BaseApplication->{FolderType,FileType}
  {TextApplication,JPGApplication}->FileType
  {Comparer,NodeType}->SortedLinkedList->FolderType
  FolderType->FileType
  {rank=max;FileType;}






}
